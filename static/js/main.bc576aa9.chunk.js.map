{"version":3,"sources":["components/create-todo.component.tsx","components/edit-todo.component.tsx","components/todo-item.component.tsx","components/todo-list.component.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CreateTodo","state","completed","description","priority","title","onChangeTodoDescription","e","_this","setState","target","value","onChangeTodoTitle","onChangeTodoPriority","onSubmit","preventDefault","newTodo","axios","post","then","res","console","log","props","history","push","react_default","a","createElement","style","marginTop","this","className","type","onChange","required","name","id","checked","Component","EditTodo","obj","put","match","params","_this2","get","response","_response$data$","data","catch","error","Todo","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onTogglecompleted","todo","deleteTodoItem","delete","modalClose","modalOpen","showModal","priorityTag","concat","react_router_dom","to","Modal","trigger","onClick","basic","size","open","onClose","Header","icon","content","Content","Actions","Button","color","inverted","Icon","TodoList","todos","componentDidMount","todolist","map","currentTodo","i","todo_item_component","key","prevState","App","marginBottom","react_router","exact","path","component","React","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0TAIqBA,6MAEVC,MAAQ,CACXC,WAAW,EACXC,YAAa,GACbC,SAAU,MACVC,MAAO,MA0FJC,wBAA0B,SAACC,GAC9BC,EAAKC,SAAS,CAAEN,YAAaI,EAAEG,OAAOC,WAGnCC,kBAAoB,SAACL,GACxBC,EAAKC,SAAS,CAAEJ,MAAOE,EAAEG,OAAOC,WAG7BE,qBAAuB,SAACN,GAC3BC,EAAKC,SAAS,CAAEL,SAAUG,EAAEG,OAAOC,WAGhCG,SAAW,SAACP,GACfA,EAAEQ,iBAEF,IAAMC,EAAU,CACZd,UAAWM,EAAKP,MAAMC,UACtBC,YAAaK,EAAKP,MAAME,YACxBC,SAAUI,EAAKP,MAAMG,SACrBC,MAAOG,EAAKP,MAAMI,OAGtBY,IAAMC,KAAK,4CAA6CF,GACnDG,KAAK,SAACC,GAAD,OAASC,QAAQC,IAAIF,KAE/BZ,EAAKe,MAAMC,QAAQC,KAAK,KAExBjB,EAAKC,SAAS,CACVP,WAAW,EACXC,YAAa,GACbC,SAAU,GACVC,MAAO,8EArHX,OACIqB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,KACrBJ,EAAAC,EAAAC,cAAA,6BAEAF,EAAAC,EAAAC,cAAA,QAAMd,SAAUiB,KAAKjB,UACjBY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLD,UAAU,WACVrB,MAAOoB,KAAK9B,MAAMI,MAClB6B,SAAUH,KAAKnB,kBACfuB,UAAQ,KAIhBT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBAEfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,YACIjB,MAAOoB,KAAK9B,MAAME,YAClB+B,SAAUH,KAAKzB,wBACf6B,UAAQ,MAKpBT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBAEfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLG,KAAK,kBACLC,GAAG,cACH1B,MAAM,MACN2B,QAAiC,QAAxBP,KAAK9B,MAAMG,SACpB8B,SAAUH,KAAKlB,uBAEnBa,EAAAC,EAAAC,cAAA,sBAIRF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLG,KAAK,kBACLC,GAAG,iBACH1B,MAAM,SACNuB,SAAUH,KAAKlB,uBAEnBa,EAAAC,EAAAC,cAAA,yBAIRF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBAEXN,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLG,KAAK,kBACLC,GAAG,eACH1B,MAAM,OACNuB,SAAUH,KAAKlB,uBAEnBa,EAAAC,EAAAC,cAAA,yBAOhBF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,SAAStB,MAAM,cAAcqB,UAAU,+BAxFnCO,aCInBC,6MAEVvC,MAAQ,CACXE,YAAa,GACbC,SAAU,GACVC,MAAO,MAmBJC,wBAA0B,SAACC,GAC9BC,EAAKC,SAAS,CAAEN,YAAaI,EAAEG,OAAOC,WAGnCC,kBAAoB,SAACL,GACxBC,EAAKC,SAAS,CAAEJ,MAAOE,EAAEG,OAAOC,WAG7BE,qBAAuB,SAACN,GAC3BC,EAAKC,SAAS,CAAEL,SAAUG,EAAEG,OAAOC,WAGhCG,SAAW,SAACP,GACfA,EAAEQ,iBAEF,IAAM0B,EAAM,CACRtC,YAAaK,EAAKP,MAAME,YACxBC,SAAUI,EAAKP,MAAMG,SACrBC,MAAOG,EAAKP,MAAMI,OAGtBY,IAAMyB,IAAI,6CAA+ClC,EAAKe,MAAMoB,MAAMC,OAAOP,GAAII,GAChFtB,KAAK,SAACC,GAAD,OAASC,QAAQC,IAAIF,KAE/BZ,EAAKe,MAAMC,QAAQC,KAAK,KAExBjB,EAAKC,SAAS,CACVN,YAAa,GACbC,SAAU,GACVC,MAAO,yFA7CY,IAAAwC,EAAAd,KAEvBd,IAAM6B,IAAI,8CAAgDf,KAAKR,MAAMoB,MAAMC,OAAOP,IAC7ElB,KAAK,SAAC4B,GAAa,IAAAC,EACyBD,EAASE,KAAK,GAA/C5C,EADQ2C,EACR3C,MAAOF,EADC6C,EACD7C,YAAaC,EADZ4C,EACY5C,SAC5ByC,EAAKpC,SAAS,CACVN,cACAC,WACAC,YAGP6C,MAAM,SAACC,GACJ9B,QAAQC,IAAI6B,sCAuCpB,OACIzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,QAAMd,SAAUiB,KAAKjB,UACjBY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SACIO,UAAQ,EACRF,KAAK,OACLD,UAAU,WACVrB,MAAOoB,KAAK9B,MAAMI,MAClB6B,SAAUH,KAAKnB,qBAIvBc,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBAEfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,YACIjB,MAAOoB,KAAK9B,MAAME,YAClB+B,SAAUH,KAAKzB,wBACf6B,UAAQ,MAKpBT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBAEfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLG,KAAK,kBACLC,GAAG,cACH1B,MAAM,MACN2B,QAAiC,QAAxBP,KAAK9B,MAAMG,SACpB8B,SAAUH,KAAKlB,uBAEnBa,EAAAC,EAAAC,cAAA,sBAIRF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLG,KAAK,kBACLC,GAAG,iBACH1B,MAAM,SACN2B,QAAiC,WAAxBP,KAAK9B,MAAMG,SACpB8B,SAAUH,KAAKlB,uBAEnBa,EAAAC,EAAAC,cAAA,yBAIRF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBAEXN,EAAAC,EAAAC,cAAA,SACIK,KAAK,QACLG,KAAK,kBACLC,GAAG,eACH1B,MAAM,OACN2B,QAAiC,SAAxBP,KAAK9B,MAAMG,SACpB8B,SAAUH,KAAKlB,uBAEnBa,EAAAC,EAAAC,cAAA,yBAOhBF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,SAAStB,MAAM,cAAcqB,UAAU,+BA1IrCO,gDCsHvBa,cAlHX,SAAAA,EAAY7B,GAAkB,IAAAf,EAAA,OAAA6C,OAAAC,EAAA,EAAAD,CAAAtB,KAAAqB,IAC1B5C,EAAA6C,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA1B,KAAMR,KAQHmC,kBAAoB,SAACnD,GAExB,IAAMkC,EAAM,CACRvC,WAAW,IAGU,IAArBK,EAAEG,OAAO4B,UACTG,EAAIvC,WAAY,GAGpBe,IAAMyB,IAAI,kDAAoDlC,EAAKe,MAAMoC,KAAKtB,GAAII,GAC7EtB,KAAK,SAAC4B,GACH1B,QAAQC,IAAIyB,MArBMvC,EA0BvBoD,eAAiB,WACpB3C,IAAM4C,OAAO,6CAA+CrD,EAAKe,MAAMoC,KAAKtB,IACvElB,KAAK,SAAC4B,GACH1B,QAAQC,IAAIyB,KAGpBvC,EAAKsD,cAhCqBtD,EAmCvBuD,UAAY,WACfvD,EAAKC,SAAS,CAAEuD,WAAW,KApCDxD,EAuCvBsD,WAAa,WAChBtD,EAAKC,SAAS,CAAEuD,WAAW,KArC3BxD,EAAKP,MAAQ,CACT+D,WAAW,GAJWxD,wEA6C1B,IAAIyD,EAAc,GAElB,OAAQlC,KAAKR,MAAMoC,KAAKvD,UACpB,IAAK,MACD6D,EAAc,OACd,MAEJ,IAAK,SACDA,EAAc,SACd,MAEJ,IAAK,OACDA,EAAc,MAItB,OACIvC,EAAAC,EAAAC,cAAA,MAAII,UAAWD,KAAKR,MAAMoC,KAAKzD,UAAY,SAAW,IAClDwB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACXN,EAAAC,EAAAC,cAAA,SACIK,KAAK,WACLC,SAAUH,KAAK2B,kBACfpB,QAASP,KAAKR,MAAMoC,KAAKzD,cAIrCwB,EAAAC,EAAAC,cAAA,UAAKG,KAAKR,MAAMoC,KAAKtD,OACrBqB,EAAAC,EAAAC,cAAA,UAAKG,KAAKR,MAAMoC,KAAKxD,aACrBuB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,SAAOI,UAAS,uBAAAkC,OAAyBD,IACpClC,KAAKR,MAAMoC,KAAKvD,WAGzBsB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAMC,GAAI,SAAWrC,KAAKR,MAAMoC,KAAKtB,IAArC,SAEJX,EAAAC,EAAAC,cAAA,UAEIF,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACIC,QAAS5C,EAAAC,EAAAC,cAAA,KAAGI,UAAU,aAAauC,QAASxC,KAAKgC,YACjDS,OAAK,EAACC,KAAK,QACXC,KAAM3C,KAAK9B,MAAM+D,UACjBW,QAAS5C,KAAK+B,YAEdpC,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,KAAK,UAAUC,QAAQ,gBAC/BpD,EAAAC,EAAAC,cAACyC,EAAA,EAAMU,QAAP,KACIrD,EAAAC,EAAAC,cAAA,+CAIJF,EAAAC,EAAAC,cAACyC,EAAA,EAAMW,QAAP,KACItD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQV,QAASxC,KAAK+B,WAAYU,OAAK,EAACU,MAAM,MAAMC,UAAQ,GACxDzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMhD,KAAK,WADf,OAGAV,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQV,QAASxC,KAAK6B,eAAgBsB,MAAM,QAAQC,UAAQ,GACxDzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMhD,KAAK,cADf,mBAtGTG,aCLE8C,6MAEVpF,MAAQ,CACXqF,MAAO,MAGJC,kBAAoB,WACvBtE,IAAM6B,IAAI,0CACL3B,KAAK,SAAC4B,GACHvC,EAAKC,SAAS,CACV6E,MAAOvC,EAASE,SAGvBC,MAAM,SAACC,GACJ9B,QAAQC,IAAI6B,QAmBjBqC,SAAW,WACd,OAAOhF,EAAKP,MAAMqF,MAAMG,IAAI,SAACC,EAAaC,GACtC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,CAAMjC,KAAM+B,EAAaG,IAAKF,yFAhBnBG,GAAgB,IAAAjD,EAAAd,KAEtCd,IAAM6B,IAAI,0CACL3B,KAAK,SAAC4B,GACHF,EAAKpC,SAAS,CACV6E,MAAOvC,EAASE,SAGvBC,MAAM,SAACC,GACJ9B,QAAQC,IAAI6B,sCAYpB,OACIzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACXN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,wCACbN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,cACbN,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAII,UAAU,aACdN,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,MAAII,UAAU,YAAd,YACAN,EAAAC,EAAAC,cAAA,MAAII,UAAU,YAAd,WACAN,EAAAC,EAAAC,cAAA,MAAII,UAAU,eAGtBN,EAAAC,EAAAC,cAAA,aACKG,KAAKyD,sBAxDIjD,aC6BvBwD,mLAvBX,OACErE,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BAA+BH,MAAO,CAACmE,aAAc,IAClEtE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAAf,wBACAN,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAMnC,UAAU,OAAOoC,GAAG,KAA1B,SACA1C,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAMnC,UAAU,OAAOoC,GAAG,WAA1B,gBAEF1C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWf,IACjC3D,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAW5D,IACnCd,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWpG,eAd7BqG,IAAM9D,WCGJ+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9D,MACvB,2DCZN+D,IAASC,OAAOjF,EAAAC,EAAAC,cAACgF,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9F,KAAK,SAAA+F,GACjCA,EAAaC","file":"static/js/main.bc576aa9.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nexport default class CreateTodo extends Component<RouteComponentProps> {\r\n\r\n    public state = {\r\n        completed: false,\r\n        description: \"\",\r\n        priority: \"Low\",\r\n        title: \"\",\r\n    };\r\n\r\n    public render() {\r\n        return (\r\n            <div style={{ marginTop: 20 }}>\r\n                <h3>Create New Todo</h3>\r\n\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"ui form\">\r\n                        <label>Title: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"ui input\"\r\n                            value={this.state.title}\r\n                            onChange={this.onChangeTodoTitle}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"ui hidden divider\" />\r\n\r\n                    <div className=\"ui form\">\r\n                        <div className=\"field\">\r\n                            <label>Description: </label>\r\n                            <textarea\r\n                                value={this.state.description}\r\n                                onChange={this.onChangeTodoDescription}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ui hidden divider\" />\r\n\r\n                    <div className=\"ui form\">\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"field\">\r\n                                <div className=\"ui radio checkbox\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"priorityOptions\"\r\n                                        id=\"priorityLow\"\r\n                                        value=\"Low\"\r\n                                        checked={this.state.priority === \"Low\"}\r\n                                        onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                                    <label>Low</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field\">\r\n                                <div className=\"ui radio checkbox\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"priorityOptions\"\r\n                                        id=\"priorityMedium\"\r\n                                        value=\"Medium\"\r\n                                        onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                                    <label>Medium</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field\">\r\n                                <div className=\"ui radio checkbox\">\r\n\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"priorityOptions\"\r\n                                        id=\"priorityHigh\"\r\n                                        value=\"High\"\r\n                                        onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                                    <label>High</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ui form\">\r\n                        <input type=\"submit\" value=\"Create Todo\" className=\"ui yellow button\" />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public onChangeTodoDescription = (e: any) => {\r\n        this.setState({ description: e.target.value });\r\n    }\r\n\r\n    public onChangeTodoTitle = (e: any) => {\r\n        this.setState({ title: e.target.value });\r\n    }\r\n\r\n    public onChangeTodoPriority = (e: any) => {\r\n        this.setState({ priority: e.target.value });\r\n    }\r\n\r\n    public onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        const newTodo = {\r\n            completed: this.state.completed,\r\n            description: this.state.description,\r\n            priority: this.state.priority,\r\n            title: this.state.title,\r\n        };\r\n\r\n        axios.post(\"http://34.87.65.231:4000/todos/createTodo\", newTodo)\r\n            .then((res) => console.log(res));\r\n\r\n        this.props.history.push(\"/\");\r\n\r\n        this.setState({\r\n            completed: false,\r\n            description: \"\",\r\n            priority: \"\",\r\n            title: \"\",\r\n        });\r\n    }\r\n}\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\ninterface IIdParams {\r\n    id: string;\r\n}\r\n\r\nexport default class EditTodo extends Component<RouteComponentProps<IIdParams>> {\r\n\r\n    public state = {\r\n        description: \"\",\r\n        priority: \"\",\r\n        title: \"\",\r\n    };\r\n\r\n    public componentDidMount() {\r\n\r\n        axios.get(\"http://34.87.65.231:4000/todos/getTodoById/\" + this.props.match.params.id)\r\n            .then((response) => {\r\n                const { title, description, priority } = response.data[0];\r\n                this.setState({\r\n                    description,\r\n                    priority,\r\n                    title,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    public onChangeTodoDescription = (e: any) => {\r\n        this.setState({ description: e.target.value });\r\n    }\r\n\r\n    public onChangeTodoTitle = (e: any) => {\r\n        this.setState({ title: e.target.value });\r\n    }\r\n\r\n    public onChangeTodoPriority = (e: any) => {\r\n        this.setState({ priority: e.target.value });\r\n    }\r\n\r\n    public onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        const obj = {\r\n            description: this.state.description,\r\n            priority: this.state.priority,\r\n            title: this.state.title,\r\n        };\r\n\r\n        axios.put(\"http://34.87.65.231:4000/todos/updateTodo/\" + this.props.match.params.id, obj)\r\n            .then((res) => console.log(res));\r\n\r\n        this.props.history.push(\"/\");\r\n\r\n        this.setState({\r\n            description: \"\",\r\n            priority: \"\",\r\n            title: \"\",\r\n        });\r\n    }\r\n\r\n    public render() {\r\n\r\n        return (\r\n            <div>\r\n                <h3>Update Todo</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"ui form\">\r\n                        <label>Title: </label>\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            className=\"ui input\"\r\n                            value={this.state.title}\r\n                            onChange={this.onChangeTodoTitle}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"ui hidden divider\" />\r\n\r\n                    <div className=\"ui form\">\r\n                        <div className=\"field\">\r\n                            <label>Description: </label>\r\n                            <textarea\r\n                                value={this.state.description}\r\n                                onChange={this.onChangeTodoDescription}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ui hidden divider\" />\r\n\r\n                    <div className=\"ui form\">\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"field\">\r\n                                <div className=\"ui radio checkbox\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"priorityOptions\"\r\n                                        id=\"priorityLow\"\r\n                                        value=\"Low\"\r\n                                        checked={this.state.priority === \"Low\"}\r\n                                        onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                                    <label>Low</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field\">\r\n                                <div className=\"ui radio checkbox\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"priorityOptions\"\r\n                                        id=\"priorityMedium\"\r\n                                        value=\"Medium\"\r\n                                        checked={this.state.priority === \"Medium\"}\r\n                                        onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                                    <label>Medium</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field\">\r\n                                <div className=\"ui radio checkbox\">\r\n\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"priorityOptions\"\r\n                                        id=\"priorityHigh\"\r\n                                        value=\"High\"\r\n                                        checked={this.state.priority === \"High\"}\r\n                                        onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                                    <label>High</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ui form\">\r\n                        <input type=\"submit\" value=\"Update Todo\" className=\"ui yellow button\" />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\r\nimport ITodoItem from \"../interfaces/TodoItem.interface\";\r\n\r\ninterface IState {\r\n    showModal: boolean;\r\n}\r\n\r\nclass Todo extends Component<ITodoItem, IState> {\r\n\r\n    constructor(props: ITodoItem) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showModal: false,\r\n        };\r\n\r\n    }\r\n\r\n    public onTogglecompleted = (e: any) => {\r\n\r\n        const obj = {\r\n            completed: false,\r\n        };\r\n\r\n        if (e.target.checked === true) {\r\n            obj.completed = true;\r\n        }\r\n\r\n        axios.put(\"http://34.87.65.231:4000/todos/updateCompleted/\" + this.props.todo.id, obj)\r\n            .then((response) => {\r\n                console.log(response);\r\n            });\r\n\r\n    }\r\n\r\n    public deleteTodoItem = () => {\r\n        axios.delete(\"http://34.87.65.231:4000/todos/deleteTodo/\" + this.props.todo.id)\r\n            .then((response) => {\r\n                console.log(response);\r\n            });\r\n\r\n        this.modalClose();\r\n    }\r\n\r\n    public modalOpen = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    public modalClose = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    public render() {\r\n\r\n        let priorityTag = \"\";\r\n\r\n        switch (this.props.todo.priority) {\r\n            case \"Low\":\r\n                priorityTag = \"blue\";\r\n                break;\r\n\r\n            case \"Medium\":\r\n                priorityTag = \"orange\";\r\n                break;\r\n\r\n            case \"High\":\r\n                priorityTag = \"red\";\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <tr className={this.props.todo.completed ? \"active\" : \"\"}>\r\n                <td>\r\n                    <div className=\"center-checkbox\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            onChange={this.onTogglecompleted}\r\n                            checked={this.props.todo.completed}\r\n                        />\r\n                    </div>\r\n                </td>\r\n                <td>{this.props.todo.title}</td>\r\n                <td>{this.props.todo.description}</td>\r\n                <td>\r\n                    <label className={`ui horizontal label ${priorityTag}`}>\r\n                        {this.props.todo.priority}\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <Link to={\"/edit/\" + this.props.todo.id}>Edit</Link>\r\n                </td>\r\n                <td>\r\n\r\n                    <Modal\r\n                        trigger={<i className=\"trash icon\" onClick={this.modalOpen} />}\r\n                        basic size=\"small\"\r\n                        open={this.state.showModal}\r\n                        onClose={this.modalClose}\r\n                    >\r\n                        <Header icon=\"archive\" content=\"Delete Todo\" />\r\n                        <Modal.Content>\r\n                            <p>\r\n                                Are you sure to delete this todo?\r\n                            </p>\r\n                        </Modal.Content>\r\n                        <Modal.Actions>\r\n                            <Button onClick={this.modalClose} basic color=\"red\" inverted>\r\n                                <Icon name=\"remove\" /> No\r\n                            </Button>\r\n                            <Button onClick={this.deleteTodoItem} color=\"green\" inverted>\r\n                                <Icon name=\"checkmark\" /> Yes\r\n                            </Button>\r\n                        </Modal.Actions>\r\n                    </Modal>\r\n\r\n                </td>\r\n            </tr>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Todo;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport Todo from \"./todo-item.component\";\r\n\r\nexport default class TodoList extends Component {\r\n\r\n    public state = {\r\n        todos: [],\r\n    };\r\n\r\n    public componentDidMount = () => {\r\n        axios.get(\"http://34.87.65.231:4000/todos/getTodo\")\r\n            .then((response) => {\r\n                this.setState({\r\n                    todos: response.data,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    public componentDidUpdate(prevState: any) {\r\n\r\n        axios.get(\"http://34.87.65.231:4000/todos/getTodo\")\r\n            .then((response) => {\r\n                this.setState({\r\n                    todos: response.data,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    public todolist = () => {\r\n        return this.state.todos.map((currentTodo, i) => {\r\n            return <Todo todo={currentTodo} key={i} />;\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div>\r\n                <h3>Todos List</h3>\r\n                <div className=\"table-container\">\r\n                    <table className=\"ui definition selectable fixed table\">\r\n                        <thead className=\"full-width\">\r\n                            <tr>\r\n                                <th className=\"one wide\"></th>\r\n                                <th>Title</th>\r\n                                <th>Description</th>\r\n                                <th className=\"two wide\">Priority</th>\r\n                                <th className=\"two wide\">Actions</th>\r\n                                <th className=\"one wide\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.todolist()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.css\";\n\nimport CreateTodo from \"./components/create-todo.component\";\nimport EditTodo from \"./components/edit-todo.component\";\nimport TodoList from \"./components/todo-list.component\";\n\nclass App extends React.Component {\n  public render() {\n    return (\n      <Router>\n        <div className=\"ui center-container\">\n          <div className=\"ui container card\">\n            <nav className=\"ui yellow inverted huge menu\" style={{marginBottom: 0}}>\n              <div className=\"header item\">Fictionlog Job Quest</div>\n              <Link className=\"item\" to=\"/\">Todos</Link>\n              <Link className=\"item\" to=\"/create\">Create Todo</Link>\n            </nav>\n            <div className=\"content\">\n              <Route exact path=\"/\" component={TodoList} />\n              <Route path=\"/edit/:id\" component={EditTodo} />\n              <Route path=\"/create\" component={CreateTodo} />\n            </div>\n          </div>\n        </div>\n\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}